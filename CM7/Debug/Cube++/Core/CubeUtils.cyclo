/Users/cjchan/Desktop/SOAR/Payload/OsirisPayload/CM7/Cube++/Core/Inc/CubeUtils.hpp:53:17:bool Utils::IsAsciiNum(uint8_t)	3
/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.12.3.rel1.macos64_1.0.100.202403111906/tools/arm-none-eabi/include/c++/12.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	1
../Cube++/Core/CubeUtils.cpp:20:10:uint16_t Utils::AverageArray(uint16_t*, int)	2
../Cube++/Core/CubeUtils.cpp:39:6:void Utils::WriteInt32ToArrayBigEndian(uint8_t*, int, int32_t)	1
../Cube++/Core/CubeUtils.cpp:53:9:int32_t Utils::ReadInt32FromArrayBigEndian(uint8_t*, int)	1
../Cube++/Core/CubeUtils.cpp:68:10:uint32_t Utils::GetCRC32Aligned(uint8_t*, uint32_t)	2
../Cube++/Core/CubeUtils.cpp:95:10:uint16_t Utils::GetCRC16(uint8_t*, uint16_t)	2
../Cube++/Core/CubeUtils.cpp:117:6:bool Utils::IsCrc16Correct(uint8_t*, uint16_t, uint16_t)	1
../Cube++/Core/CubeUtils.cpp:130:9:int32_t Utils::StringToLong(const char*)	4
../Cube++/Core/CubeUtils.cpp:169:9:int32_t Utils::ExtractIntParameter(const char*, uint16_t)	3
/Users/cjchan/Desktop/SOAR/Payload/OsirisPayload/CM7/Cube++/Libraries/embedded-template-library/include/etl/private/crc_implementation.h:664:5:etl::crc_type<TCrcParameters, Table_Size>::crc_type() [with TCrcParameters = etl::private_crc::crc_parameters<short unsigned int, 4129, 0, 0, false>; unsigned int Table_Size = 256]	1
/Users/cjchan/Desktop/SOAR/Payload/OsirisPayload/CM7/Cube++/Libraries/embedded-template-library/include/etl/private/../frame_check_sequence.h:134:10:void etl::frame_check_sequence<TPolicy>::reset() [with TPolicy = etl::private_crc::crc_policy<etl::private_crc::crc_parameters<short unsigned int, 4129, 0, 0, false>, 256>]	1
/Users/cjchan/Desktop/SOAR/Payload/OsirisPayload/CM7/Cube++/Libraries/embedded-template-library/include/etl/private/../frame_check_sequence.h:159:10:void etl::frame_check_sequence<TPolicy>::add(uint8_t) [with TPolicy = etl::private_crc::crc_policy<etl::private_crc::crc_parameters<short unsigned int, 4129, 0, 0, false>, 256>]	1
/Users/cjchan/Desktop/SOAR/Payload/OsirisPayload/CM7/Cube++/Libraries/embedded-template-library/include/etl/private/../frame_check_sequence.h:167:16:etl::frame_check_sequence<TPolicy>::value_type etl::frame_check_sequence<TPolicy>::value() const [with TPolicy = etl::private_crc::crc_policy<etl::private_crc::crc_parameters<short unsigned int, 4129, 0, 0, false>, 256>]	1
/Users/cjchan/Desktop/SOAR/Payload/OsirisPayload/CM7/Cube++/Libraries/embedded-template-library/include/etl/private/../frame_check_sequence.h:112:5:etl::frame_check_sequence<TPolicy>::frame_check_sequence() [with TPolicy = etl::private_crc::crc_policy<etl::private_crc::crc_parameters<short unsigned int, 4129, 0, 0, false>, 256>]	1
/Users/cjchan/Desktop/SOAR/Payload/OsirisPayload/CM7/Cube++/Libraries/embedded-template-library/include/etl/private/crc_implementation.h:581:38:constexpr etl::private_crc::crc_policy<TCrcParameters, 256>::accumulator_type etl::private_crc::crc_policy<TCrcParameters, 256>::initial() const [with TCrcParameters = etl::private_crc::crc_parameters<short unsigned int, 4129, 0, 0, false>]	1
/Users/cjchan/Desktop/SOAR/Payload/OsirisPayload/CM7/Cube++/Libraries/embedded-template-library/include/etl/private/crc_implementation.h:292:20:TAccumulator etl::private_crc::crc_table<TAccumulator, Accumulator_Bits, Chunk_Bits, Chunk_Mask, Polynomial, Reflect, 256>::add(TAccumulator, uint8_t) const [with TAccumulator = short unsigned int; unsigned int Accumulator_Bits = 16; unsigned int Chunk_Bits = 8; unsigned char Chunk_Mask = 255; TAccumulator Polynomial = 4129; bool Reflect = false]	1
/Users/cjchan/Desktop/SOAR/Payload/OsirisPayload/CM7/Cube++/Libraries/embedded-template-library/include/etl/private/crc_implementation.h:588:24:etl::private_crc::crc_policy<TCrcParameters, 256>::accumulator_type etl::private_crc::crc_policy<TCrcParameters, 256>::final(accumulator_type) const [with TCrcParameters = etl::private_crc::crc_parameters<short unsigned int, 4129, 0, 0, false>]	1
/Users/cjchan/Desktop/SOAR/Payload/OsirisPayload/CM7/Cube++/Libraries/embedded-template-library/include/etl/private/crc_implementation.h:138:7:typename etl::enable_if<((Accumulator_Bits > Chunk_Bits) && (! Reflect)), TAccumulator>::type etl::private_crc::crc_update_chunk(TAccumulator, uint8_t, const TAccumulator*) [with TAccumulator = short unsigned int; unsigned int Accumulator_Bits = 16; unsigned int Chunk_Bits = 8; unsigned char Chunk_Mask = 255; bool Reflect = false]	1
